syntax = "proto3";

package infraboard.mpaas.deploy;
option go_package = "github.com/infraboard/mpaas/apps/deploy";

import "mcube/pb/request/request.proto";
import "mcube/pb/page/page.proto";
import "mpaas/apps/deploy/pb/deploy.proto";
import "mcube/pb/resource/meta.proto";
import "mcube/pb/resource/label.proto";

// RPC 应用部署配置
service RPC {
    // 查询部署列表
    rpc QueryDeployment(QueryDeploymentRequest) returns(DeploymentSet);
    // 查询部署详情
    rpc DescribeDeployment(DescribeDeploymentRequest) returns(Deployment);
    // 更新部署状态, moperator通过该rpc接口更新部署状态
    rpc UpdateDeploymentStatus(UpdateDeploymentStatusRequest) returns(Deployment);
    // 查询部署是需要动态注入的环境变量, moperator 通过该接口拉取Env进行动态注入
    rpc QueryDeploymentInjectEnv(QueryDeploymentInjectEnvRequest) returns(InjectionEnvGroupSet);
}

message QueryDeploymentInjectEnvRequest {
    // 部署Id
    // @gotags: json:"id"  validate:"required"
    string id = 2;
}

message UpdateDeploymentStatusRequest {
    // 部署Id
    // @gotags: json:"id"
    string id = 1;
    // 更新Token, 校验合法性
    // @gotags: json:"update_token"
    string update_token = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // k8s相关配置更新, 当部署时k8s部署是有效
    // @gotags: json:"updated_k8s_config"
    K8sTypeConfig updated_k8s_config = 4;
}

message QueryDeploymentRequest {
    // 资源范围
    // @gotags: json:"scope"
    mcube.resource.Scope scope = 1;
    // 资源标签过滤
    // @gotags: json:"filters"
    repeated mcube.resource.LabelRequirement filters = 2;
    // 分页请求
    // @gotags: json:"page"
    mcube.page.PageRequest page = 3;
    // 部署Id列表
    // @gotags: json:"ids"
    repeated string ids = 4;
    // 查询服务相关的部署
    // @gotags: json:"service_ids"
    repeated string service_ids = 5;
    // 查询集群相关的部署
    // @gotags: json:"clusters"
    repeated string clusters = 6;
    // 查询Pod关联的部署
    // @gotags: json:"pod_name"
    string pod_name = 7;
}

enum DESCRIBE_BY {
    // 部署ID
    ID = 0;
    // 部署的名称
    NAME = 1;
}

message DescribeDeploymentRequest {
    // 查询方式
    // @gotags: json:"describe_by"
    DESCRIBE_BY describe_by = 1;
    // 查询值
    // @gotags: json:"describe_value"  validate:"required"
    string describe_value = 2;
    // 查询值
    // @gotags: json:"domain"
    string domain = 3;
    // 查询值
    // @gotags: json:"namespace"  
    string namespace = 4;
}

message UpdateDeploymentRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 1;
    // 部署Id
    // @gotags: json:"id"
    string id = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // 创建信息
    // @gotags: json:"spec"
    CreateDeploymentRequest spec = 4;
    // 是否需要调用k8s API 执行update
    // @gotags: json:"sync"
    bool sync = 5;
}

message DeleteDeploymentRequest {
    // 部署Id
    // @gotags: json:"id"
    string id = 1;
}

