// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: mpaas/apps/cluster/pb/cluster.proto

package cluster

import (
	service "github.com/infraboard/mcenter/apps/service"
	resource "github.com/infraboard/mcube/pb/resource"
	deploy "github.com/infraboard/mpaas/apps/deploy"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KIND int32

const (
	// 应用工作负载, 需要关联应用
	KIND_WORKLOAD KIND = 0
	// 应用中间件, 无需关联应用, 直接部署
	KIND_MIDDLEWARE KIND = 1
)

// Enum value maps for KIND.
var (
	KIND_name = map[int32]string{
		0: "WORKLOAD",
		1: "MIDDLEWARE",
	}
	KIND_value = map[string]int32{
		"WORKLOAD":   0,
		"MIDDLEWARE": 1,
	}
)

func (x KIND) Enum() *KIND {
	p := new(KIND)
	*p = x
	return p
}

func (x KIND) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KIND) Descriptor() protoreflect.EnumDescriptor {
	return file_mpaas_apps_cluster_pb_cluster_proto_enumTypes[0].Descriptor()
}

func (KIND) Type() protoreflect.EnumType {
	return &file_mpaas_apps_cluster_pb_cluster_proto_enumTypes[0]
}

func (x KIND) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KIND.Descriptor instead.
func (KIND) EnumDescriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{0}
}

type ACCESS_TYPE int32

const (
	// 以环境变量访问
	ACCESS_TYPE_ENV ACCESS_TYPE = 0
)

// Enum value maps for ACCESS_TYPE.
var (
	ACCESS_TYPE_name = map[int32]string{
		0: "ENV",
	}
	ACCESS_TYPE_value = map[string]int32{
		"ENV": 0,
	}
)

func (x ACCESS_TYPE) Enum() *ACCESS_TYPE {
	p := new(ACCESS_TYPE)
	*p = x
	return p
}

func (x ACCESS_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACCESS_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_mpaas_apps_cluster_pb_cluster_proto_enumTypes[1].Descriptor()
}

func (ACCESS_TYPE) Type() protoreflect.EnumType {
	return &file_mpaas_apps_cluster_pb_cluster_proto_enumTypes[1]
}

func (x ACCESS_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACCESS_TYPE.Descriptor instead.
func (ACCESS_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{1}
}

type ClusterSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总数
	// @gotags: json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	// 清单
	// @gotags: json:"items"
	Items []*Cluster `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ClusterSet) Reset() {
	*x = ClusterSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSet) ProtoMessage() {}

func (x *ClusterSet) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSet.ProtoReflect.Descriptor instead.
func (*ClusterSet) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ClusterSet) GetItems() []*Cluster {
	if x != nil {
		return x.Items
	}
	return nil
}

// 部署集群
type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元信息
	// @gotags: bson:",inline" json:"meta"
	Meta *resource.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta" bson:",inline"`
	// 元信息
	// @gotags: bson:",inline" json:"scope"
	Scope *resource.Scope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope" bson:",inline"`
	// 创建信息
	// @gotags: bson:",inline" json:"spec"
	Spec *CreateClusterRequest `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec" bson:",inline"`
	// 关联的部署
	// @gotags: bson:"-" json:"deployments"
	Deployments *deploy.DeploymentSet `protobuf:"bytes,4,opt,name=deployments,proto3" json:"deployments" bson:"-"`
	// 关联的部署
	// @gotags: bson:"-" json:"service"
	Service *service.Service `protobuf:"bytes,5,opt,name=service,proto3" json:"service" bson:"-"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *Cluster) GetMeta() *resource.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Cluster) GetScope() *resource.Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Cluster) GetSpec() *CreateClusterRequest {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Cluster) GetDeployments() *deploy.DeploymentSet {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *Cluster) GetService() *service.Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type CreateClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部署的类型
	// @gotags: bson:"kind" json:"kind"
	Kind KIND `protobuf:"varint,1,opt,name=kind,proto3,enum=infraboard.mpaas.cluster.KIND" json:"kind" bson:"kind"`
	// 服务Id
	// @gotags: bson:"service_id" json:"service_id"
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id" bson:"service_id"`
	// 集群名称
	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" bson:"name" validate:"required"`
	// 集群描述
	// @gotags: bson:"describe" json:"describe"
	Describe string `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe" bson:"describe"`
	// 集群访问相关信息
	// @gotags: bson:"access_info" json:"access_info"
	AccessInfo *AccessInfo `protobuf:"bytes,5,opt,name=access_info,json=accessInfo,proto3" json:"access_info" bson:"access_info"`
	// 扩展属性
	// @gotags: bson:"extra" json:"extra"
	Extra map[string]string `protobuf:"bytes,14,rep,name=extra,proto3" json:"extra" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extra"`
	// 部署标签
	// @gotags: bson:"labels" json:"labels"
	Labels map[string]string `protobuf:"bytes,15,rep,name=labels,proto3" json:"labels" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"labels"`
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *CreateClusterRequest) GetKind() KIND {
	if x != nil {
		return x.Kind
	}
	return KIND_WORKLOAD
}

func (x *CreateClusterRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *CreateClusterRequest) GetAccessInfo() *AccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *CreateClusterRequest) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 内部访问地址
	// @gotags: bson:"private" json:"private"
	Private *AccessAddress `protobuf:"bytes,1,opt,name=private,proto3" json:"private" bson:"private"`
	// 是否注册到网关
	// @gotags: bson:"registe_gateway" json:"registe_gateway"
	RegisteGateway bool `protobuf:"varint,2,opt,name=registe_gateway,json=registeGateway,proto3" json:"registe_gateway" bson:"registe_gateway"`
	// 网关Id
	// @gotags: bson:"gateway_id" json:"gateway_id"
	GatewayId string `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id" bson:"gateway_id"`
	// 外部访问地址
	// @gotags: bson:"public" json:"public"
	Public *AccessAddress `protobuf:"bytes,4,opt,name=public,proto3" json:"public" bson:"public"`
}

func (x *AccessInfo) Reset() {
	*x = AccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfo) ProtoMessage() {}

func (x *AccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfo.ProtoReflect.Descriptor instead.
func (*AccessInfo) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *AccessInfo) GetPrivate() *AccessAddress {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *AccessInfo) GetRegisteGateway() bool {
	if x != nil {
		return x.RegisteGateway
	}
	return false
}

func (x *AccessInfo) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *AccessInfo) GetPublic() *AccessAddress {
	if x != nil {
		return x.Public
	}
	return nil
}

// 部署的访问方式
type AccessAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 访问的方式
	// @gotags: bson:"type" json:"type"
	Type ACCESS_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=infraboard.mpaas.cluster.ACCESS_TYPE" json:"type" bson:"type"`
	// 访问地址
	// @gotags: bson:"access_envs" json:"access_envs"
	AccessEnvs []*AccessEnv `protobuf:"bytes,2,rep,name=access_envs,json=accessEnvs,proto3" json:"access_envs" bson:"access_envs"`
}

func (x *AccessAddress) Reset() {
	*x = AccessAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessAddress) ProtoMessage() {}

func (x *AccessAddress) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessAddress.ProtoReflect.Descriptor instead.
func (*AccessAddress) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *AccessAddress) GetType() ACCESS_TYPE {
	if x != nil {
		return x.Type
	}
	return ACCESS_TYPE_ENV
}

func (x *AccessAddress) GetAccessEnvs() []*AccessEnv {
	if x != nil {
		return x.AccessEnvs
	}
	return nil
}

// kubelet 为 Pod 添加环境变量 {SVCNAME}_SERVICE_HOST 和 {SVCNAME}_SERVICE_PORT。
// 这里 Service 的名称需大写，横线被转换成下划线。
// 具体请参考: https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#environment-variables
type AccessEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务访问地址变量的名称
	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name"`
	// 样例
	// @gotags: bson:"example" json:"example"
	Example string `protobuf:"bytes,2,opt,name=example,proto3" json:"example" bson:"example"`
}

func (x *AccessEnv) Reset() {
	*x = AccessEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessEnv) ProtoMessage() {}

func (x *AccessEnv) ProtoReflect() protoreflect.Message {
	mi := &file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessEnv.ProtoReflect.Descriptor instead.
func (*AccessEnv) Descriptor() ([]byte, []int) {
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *AccessEnv) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessEnv) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

var File_mpaas_apps_cluster_pb_cluster_proto protoreflect.FileDescriptor

var file_mpaas_apps_cluster_pb_cluster_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x1a,
	0x1c, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2f, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x25, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x52, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xfa, 0x03, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4b, 0x49, 0x4e,
	0x44, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x52,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x76, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x76, 0x73, 0x22, 0x39, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45,
	0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2a, 0x24, 0x0a, 0x04, 0x4b, 0x49, 0x4e, 0x44, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x4f, 0x52, 0x4b,
	0x4c, 0x4f, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45,
	0x57, 0x41, 0x52, 0x45, 0x10, 0x01, 0x2a, 0x16, 0x0a, 0x0b, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x10, 0x00, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mpaas_apps_cluster_pb_cluster_proto_rawDescOnce sync.Once
	file_mpaas_apps_cluster_pb_cluster_proto_rawDescData = file_mpaas_apps_cluster_pb_cluster_proto_rawDesc
)

func file_mpaas_apps_cluster_pb_cluster_proto_rawDescGZIP() []byte {
	file_mpaas_apps_cluster_pb_cluster_proto_rawDescOnce.Do(func() {
		file_mpaas_apps_cluster_pb_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpaas_apps_cluster_pb_cluster_proto_rawDescData)
	})
	return file_mpaas_apps_cluster_pb_cluster_proto_rawDescData
}

var file_mpaas_apps_cluster_pb_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mpaas_apps_cluster_pb_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mpaas_apps_cluster_pb_cluster_proto_goTypes = []interface{}{
	(KIND)(0),                    // 0: infraboard.mpaas.cluster.KIND
	(ACCESS_TYPE)(0),             // 1: infraboard.mpaas.cluster.ACCESS_TYPE
	(*ClusterSet)(nil),           // 2: infraboard.mpaas.cluster.ClusterSet
	(*Cluster)(nil),              // 3: infraboard.mpaas.cluster.Cluster
	(*CreateClusterRequest)(nil), // 4: infraboard.mpaas.cluster.CreateClusterRequest
	(*AccessInfo)(nil),           // 5: infraboard.mpaas.cluster.AccessInfo
	(*AccessAddress)(nil),        // 6: infraboard.mpaas.cluster.AccessAddress
	(*AccessEnv)(nil),            // 7: infraboard.mpaas.cluster.AccessEnv
	nil,                          // 8: infraboard.mpaas.cluster.CreateClusterRequest.ExtraEntry
	nil,                          // 9: infraboard.mpaas.cluster.CreateClusterRequest.LabelsEntry
	(*resource.Meta)(nil),        // 10: infraboard.mcube.resource.Meta
	(*resource.Scope)(nil),       // 11: infraboard.mcube.resource.Scope
	(*deploy.DeploymentSet)(nil), // 12: infraboard.mpaas.deploy.DeploymentSet
	(*service.Service)(nil),      // 13: infraboard.mcenter.service.Service
}
var file_mpaas_apps_cluster_pb_cluster_proto_depIdxs = []int32{
	3,  // 0: infraboard.mpaas.cluster.ClusterSet.items:type_name -> infraboard.mpaas.cluster.Cluster
	10, // 1: infraboard.mpaas.cluster.Cluster.meta:type_name -> infraboard.mcube.resource.Meta
	11, // 2: infraboard.mpaas.cluster.Cluster.scope:type_name -> infraboard.mcube.resource.Scope
	4,  // 3: infraboard.mpaas.cluster.Cluster.spec:type_name -> infraboard.mpaas.cluster.CreateClusterRequest
	12, // 4: infraboard.mpaas.cluster.Cluster.deployments:type_name -> infraboard.mpaas.deploy.DeploymentSet
	13, // 5: infraboard.mpaas.cluster.Cluster.service:type_name -> infraboard.mcenter.service.Service
	0,  // 6: infraboard.mpaas.cluster.CreateClusterRequest.kind:type_name -> infraboard.mpaas.cluster.KIND
	5,  // 7: infraboard.mpaas.cluster.CreateClusterRequest.access_info:type_name -> infraboard.mpaas.cluster.AccessInfo
	8,  // 8: infraboard.mpaas.cluster.CreateClusterRequest.extra:type_name -> infraboard.mpaas.cluster.CreateClusterRequest.ExtraEntry
	9,  // 9: infraboard.mpaas.cluster.CreateClusterRequest.labels:type_name -> infraboard.mpaas.cluster.CreateClusterRequest.LabelsEntry
	6,  // 10: infraboard.mpaas.cluster.AccessInfo.private:type_name -> infraboard.mpaas.cluster.AccessAddress
	6,  // 11: infraboard.mpaas.cluster.AccessInfo.public:type_name -> infraboard.mpaas.cluster.AccessAddress
	1,  // 12: infraboard.mpaas.cluster.AccessAddress.type:type_name -> infraboard.mpaas.cluster.ACCESS_TYPE
	7,  // 13: infraboard.mpaas.cluster.AccessAddress.access_envs:type_name -> infraboard.mpaas.cluster.AccessEnv
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mpaas_apps_cluster_pb_cluster_proto_init() }
func file_mpaas_apps_cluster_pb_cluster_proto_init() {
	if File_mpaas_apps_cluster_pb_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpaas_apps_cluster_pb_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpaas_apps_cluster_pb_cluster_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mpaas_apps_cluster_pb_cluster_proto_goTypes,
		DependencyIndexes: file_mpaas_apps_cluster_pb_cluster_proto_depIdxs,
		EnumInfos:         file_mpaas_apps_cluster_pb_cluster_proto_enumTypes,
		MessageInfos:      file_mpaas_apps_cluster_pb_cluster_proto_msgTypes,
	}.Build()
	File_mpaas_apps_cluster_pb_cluster_proto = out.File
	file_mpaas_apps_cluster_pb_cluster_proto_rawDesc = nil
	file_mpaas_apps_cluster_pb_cluster_proto_goTypes = nil
	file_mpaas_apps_cluster_pb_cluster_proto_depIdxs = nil
}
